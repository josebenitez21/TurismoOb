# Generated by Django 4.2.1 on 2023-05-24 00:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Canton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Cantones',
                'db_table': 'canton',
            },
        ),
        migrations.CreateModel(
            name='Catalogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('descripcion', models.CharField(blank=True, max_length=255)),
                ('register', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'catalog',
            },
        ),
        migrations.CreateModel(
            name='Establecimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registro_SIIT', models.CharField(blank=True, max_length=255)),
                ('registro_SIETE', models.CharField(blank=True, max_length=255)),
                ('nombre', models.CharField(help_text='Nombre del establecimiento', max_length=255)),
                ('RUC', models.CharField(help_text='RUC del establecimiento', max_length=13)),
                ('email', models.EmailField(max_length=255)),
                ('web', models.URLField(blank=True, max_length=255)),
                ('telefono', models.CharField(max_length=10)),
                ('direccion', models.CharField(max_length=255)),
                ('calle_principal', models.CharField(blank=True, max_length=255)),
                ('calle_numero', models.CharField(blank=True, max_length=10)),
                ('calle_secundaria', models.CharField(blank=True, max_length=255)),
                ('empleados', models.IntegerField(default=0)),
                ('hombres', models.IntegerField(default=0)),
                ('mujeres', models.IntegerField(default=0)),
                ('discapacitados', models.IntegerField(default=0)),
                ('empleados_habitaciones', models.IntegerField(default=0, help_text='Número de empleados para las habitaciones')),
                ('empleados_alimentos_bebidas', models.IntegerField(default=0, help_text='Número de empleados para atención de alimentos y bebidas')),
                ('empleados_administrativos', models.IntegerField(default=0, help_text='Número de empleados administrativos')),
                ('empleados_otras_areas', models.IntegerField(default=0, help_text='Número de empleados en otras áreas del establecimiento')),
                ('local', models.CharField(choices=[('arrendado', 'Arrendado'), ('propio', 'Propio'), ('cedido', 'Cedido')], max_length=255, null=True)),
                ('area_total', models.IntegerField(default=0, help_text='Metros cuadrados del establecimiento')),
                ('area_alimentos_bebidas', models.IntegerField(default=0, help_text='Metros cuadrados para el área de alimentos y bebidas')),
                ('habitaciones', models.IntegerField(default=0)),
                ('plazas', models.IntegerField(default=0)),
                ('propietario', models.CharField(max_length=255)),
                ('representante', models.CharField(blank=True, max_length=255, null=True)),
                ('latitud', models.CharField(blank=True, max_length=255, null=True)),
                ('longitud', models.CharField(blank=True, max_length=255, null=True)),
                ('register', models.DateTimeField(auto_now_add=True)),
                ('canton', models.ForeignKey(blank=True, db_column='canton', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='est_cantones', to='core.canton')),
            ],
            options={
                'verbose_name': 'Establecimiento',
                'verbose_name_plural': 'Establecimientos',
                'db_table': 'establecimiento',
            },
        ),
        migrations.CreateModel(
            name='Provincia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Provincias',
                'db_table': 'provincia',
            },
        ),
        migrations.CreateModel(
            name='UserProvincia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provincias', models.ManyToManyField(to='core.provincia')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_provincia', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuario Provincias',
                'db_table': 'user_provincia',
            },
        ),
        migrations.CreateModel(
            name='Parroquia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('canton', models.ForeignKey(db_column='canton', on_delete=django.db.models.deletion.CASCADE, related_name='parroquias', to='core.canton')),
            ],
            options={
                'verbose_name_plural': 'Parroquias',
                'db_table': 'parroquia',
            },
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('descripcion', models.CharField(blank=True, max_length=255)),
                ('register', models.DateTimeField(auto_now_add=True)),
                ('catalogo', models.ForeignKey(blank=True, db_column='catalogo', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='core.catalogo')),
            ],
            options={
                'verbose_name_plural': 'Items',
                'db_table': 'items',
            },
        ),
        migrations.CreateModel(
            name='EstablecimientoRegistro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('checkins', models.IntegerField(default=0, help_text='Número total de personas que registraron su ENTRADA')),
                ('checkouts', models.IntegerField(default=0, help_text='Número total de personas que registraron su SALIDA')),
                ('pernoctaciones', models.IntegerField(default=0, help_text='Número total de huéspedes que pernoctaron en el establecimiento')),
                ('nacionales', models.IntegerField(default=0, help_text='Número total de huéspedes ECUATORIANOS que se registraron en el establecimiento')),
                ('extranjeros', models.IntegerField(default=0, help_text='Número total de huéspedes EXTRANJEROS que se registraron en el establecimiento')),
                ('habitaciones_ocupadas', models.IntegerField(default=0, help_text='Habitaciones vendidas o que estuvieron ocupadas este día')),
                ('habitaciones_disponibles', models.IntegerField(default=0, help_text='Habitaciones disponibles o habilitadas en el establecimiento, no incluye habitaciones en mantenimiento ni para uso del personal')),
                ('tarifa_promedio', models.DecimalField(decimal_places=2, default=0, help_text='Tarifa estándar o promedio aproximado de las tarifas cobradas durante el día', max_digits=10)),
                ('ventas_netas', models.DecimalField(decimal_places=2, default=0, help_text='Únicamente ventas relacionadas con alojamiento, no incluye ventas de restaurantes, eventos, alquiler de auditorios, etc. No debe incluir impuestos ni tasas', max_digits=10)),
                ('porcentaje_ocupacion', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('revpar', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('empleados_temporales', models.IntegerField(default=0, help_text='Empleados contratados para este día')),
                ('estado', models.CharField(choices=[('sin_validar', 'sin_validar'), ('validado', 'validado')], default='sin_validar', max_length=15)),
                ('register', models.DateTimeField(auto_now_add=True)),
                ('establecimiento', models.ForeignKey(db_column='establecimiento', on_delete=django.db.models.deletion.CASCADE, related_name='registros', to='core.establecimiento')),
                ('tipo_tarifa', models.ForeignKey(blank=True, db_column='tipo_tarifa', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='est_tipo_tarfia', to='core.items')),
            ],
            options={
                'verbose_name': 'Registros de Establecimiento',
                'verbose_name_plural': 'Registros de Establecimiento',
                'db_table': 'establecimiento_registro',
                'ordering': ['-fecha'],
            },
        ),
        migrations.AddField(
            model_name='establecimiento',
            name='categoria',
            field=models.ForeignKey(blank=True, db_column='categoria', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='est_cat', to='core.items'),
        ),
        migrations.AddField(
            model_name='establecimiento',
            name='clasificacion',
            field=models.ForeignKey(blank=True, db_column='clasificacion', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='est_clasificacion', to='core.items'),
        ),
        migrations.AddField(
            model_name='establecimiento',
            name='parroquia',
            field=models.ForeignKey(blank=True, db_column='parroquia', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='est_parroquias', to='core.parroquia'),
        ),
        migrations.AddField(
            model_name='establecimiento',
            name='provincia',
            field=models.ForeignKey(blank=True, db_column='provincia', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='est_provincias', to='core.provincia'),
        ),
        migrations.AddField(
            model_name='establecimiento',
            name='user',
            field=models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='canton',
            name='provincia',
            field=models.ForeignKey(db_column='provincia', on_delete=django.db.models.deletion.CASCADE, related_name='cantones', to='core.provincia'),
        ),
    ]
